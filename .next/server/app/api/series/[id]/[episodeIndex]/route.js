"use strict";(()=>{var e={};e.id=680,e.ids=[680],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},87561:e=>{e.exports=require("node:fs")},84492:e=>{e.exports=require("node:stream")},22037:e=>{e.exports=require("os")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},76224:e=>{e.exports=require("tty")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},71267:e=>{e.exports=require("worker_threads")},59796:e=>{e.exports=require("zlib")},23945:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>f,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>q});var s={};t.r(s),t.d(s,{POST:()=>l});var i=t(49303),o=t(88716),n=t(60670),a=t(25563),p=t(92831),u=t(25493),d=t(42336),c=t(87070);async function l(e){try{await (0,u.Z)();let r=e.url.split("/"),t=r.pop(),s=r.pop();if(!s)return c.NextResponse.json({message:"id is required"},{status:d.WE.BadRequest});let i=await p.Z.findById(s),o=i.history.slice(),n=o.findIndex(e=>e.id===t);o=o.slice(0,n);let l=await a.f.chat.completions.create({model:"gpt-4",messages:o});o.push({...l.choices[0].message,id:Math.random().toString()}),i.history=o;let m=await i.save();return c.NextResponse.json({series:m,message:"Your Series updated"},{status:d.WE.Created})}catch(e){return c.NextResponse.json({message:e},{status:d.WE.BadRequest})}}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/series/[id]/[episodeIndex]/route",pathname:"/api/series/[id]/[episodeIndex]",filename:"route",bundlePath:"app/api/series/[id]/[episodeIndex]/route"},resolvedPagePath:"/Users/pashayakubovsky/Desktop/skripta/src/app/api/series/[id]/[episodeIndex]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:q,serverHooks:h}=m,v="/api/series/[id]/[episodeIndex]/route";function f(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:q})}},25563:(e,r,t)=>{t.d(r,{f:()=>o});var s=t(14205);let i=process.env.OPENAI_API_KEY||"",o=new s.ZP.OpenAI({apiKey:i})},92831:(e,r,t)=>{t.d(r,{Z:()=>o});var s=t(11185);let i=new s.Schema({filmScriptId:{type:String,required:!0,unique:!1},userId:{type:String,required:!0},history:{type:JSON,required:!0},name:{type:String,required:!1}},{timestamps:!0,toJSON:{versionKey:!1,virtuals:!0,transform:(e,r)=>{delete r._id}}}),o=s.models.Series||(0,s.model)("Series",i)},25493:(e,r,t)=>{t.d(r,{Z:()=>a});var s=t(11185),i=t.n(s);let o=process.env.MONGO_URI,n={},a=async function(){if(!o)throw Error("Please define the MONGO_URI environment variable inside .env.local");if(n.connection)return n.connection;n.promise||(n.promise=i().connect(o,{bufferCommands:!1}));try{n.connection=await n.promise}catch(e){throw n.promise=void 0,e}return n.connection}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,969,205],()=>t(23945));module.exports=s})();